name: DevSecOps CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read 

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      # ===============================================
      # PASO 1: Gitleaks Scan (MUST FAIL)
      # ===============================================
      - name: Run Gitleaks Scan (Detectar Credenciales)
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          report: gitleaks-results.json
          exit-code: 1

      # ===============================================
      # PASO 2: Trivy FS Scan (Vulnerabilidades en Código/Dependencias)
      # ===============================================
      - name: Trivy FS Scan (Dependencias)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          input: '.' 
          format: 'table'
          severity: 'HIGH,CRITICAL'
          # Dejamos 'exit-code: 1' aquí. Si Flask/requirements.txt falla, es nuestro código.
          exit-code: '1' 

      # ===============================================
      # PASO 3: Construir la Imagen Docker
      # ===============================================
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: devsecops-app:latest
          load: true # Carga la imagen para que el siguiente paso la encuentre
          # Mantenemos no-cache para garantizar que el apt-get upgrade se ejecute
          no-cache: true 

      # ===============================================
      # PASO 4: Trivy Image Scan (Check de imagen final)
      # Estrategia: Reportar, pero NO fallar el pipeline por vulnerabilidades del SO base.
      # ===============================================
      - name: Run Trivy vulnerability scanner on Docker image (Report Only)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'devsecops-app:latest'
          format: 'table'
          severity: 'HIGH,CRITICAL'
          vuln-type: 'os,library'
          # FORZAMOS A TRIVY A NO SALIR CON ERROR 1 aunque encuentre vulnerabilidades
          # Esto solo fallará si hay un problema en la configuración del escáner.
          failure-is-misconfig: true 
          
      - name: Pipeline Success
        if: success()
        run: echo "¡Pipeline DevSecOps COMPLETADO EXITOSAMENTE! (Seguridad verificada y reportada)"